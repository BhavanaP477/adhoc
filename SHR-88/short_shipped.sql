-- MR2C.FFRECEIPT TABLE
-- I TRADE
-- KDW
-- MR 2 .container 


-- of positive shrink keycodes get subset where first trn 
-- MR2C weekly adjusted sales


-- over shippe and maximum value of shrink one SKU
-- resuable 

WITH 
GM_DEPTS AS 
(
	SELECT DEPARTMENT_SOURCE_IDENTIFIER 
	FROM KSFPA.LOSS_PREVENTION_PVT.DEPARTMENT_GM_APPAREL_CATEGORY
	WHERE CATEGORY = 'GM'
)
,

SKUS_SUBSET AS 
(
	SELECT PRODUCT_KEYCODE
	FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT 
	WHERE 
		DEPARTMENT_CODE IN ( SELECT * FROM GM_DEPTS )
	AND DEPARTMENT_DESCRIPTION NOT IN ('GARDEN GREENS','MAGAZINES','REUSABLE BAGS','CARDS & WRAP','PHOTO CENTRE','GIFT CARDS & RCHRG')
--	AND SEASON_YEAR_NUMBER >= 2022
--	AND SEASONALITY IN ( 'SUMMER' , 'WINTER' )
)
,

SALES AS 
(
SELECT 
	PRODUCT_GENERATED_IDENTIFIER 
	, MIN(WEEK_END_DATE) AS FIRST_SALES_DATE
FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES
WHERE WEEKLY_NET_SALES_QUANTITY != 0
GROUP BY 1
)
,

PO1 AS 
(
	SELECT
		ORDER_GENERATED_IDENTIFIER 
		, PRODUCT_GENERATED_IDENTIFIER 
		, LOCATION_GENERATED_IDENTIFIER 
		, COALESCE(AGREED_ORDER_QUANTITY,ORDER_QUANTITY) AS ORD_QTY
		, ORDER_PACK_NUMBER 
	FROM KSFPA.MR2.ORDER_PRODUCT_DLV_LOCN
	WHERE EXPIRY_DATE = '9999-12-31'
	AND EFFECTIVE_DATE > '2022-02-20'
	AND LOCATION_GENERATED_IDENTIFIER = '1040932400001'
)
,

PO2 AS 
(
	SELECT 
		ORDER_GENERATED_IDENTIFIER 
		, ORDER_SOURCE_IDENTIFIER 
		, DEPARTMENT_SOURCE_IDENTIFIER 
		, DEPARTMENT_GENERATED_ID
	--	, EXPECTED_DELIVERY_DATE 
	--	, ORIG_EXPECTED_DELIVERY_DATE 
	--	, ORDER_TYPE_CODE
		, ORDER_STATUS_CODE
		, WEEK_END_DATE 
	FROM KSFPA.MR2C.PURCHASE_ORDER 
	WHERE ORDER_STATUS_CODE IN ('FD','XB')
--		AND WEEK_END_DATE > '2022-02-20'
--		AND WEEK_END_DATE <= '2022-10-23'
)
,

PO AS 
(
	SELECT 
		COALESCE(PO1.ORDER_GENERATED_IDENTIFIER,PO2.ORDER_GENERATED_IDENTIFIER) 
			AS ORDER_GENERATED_IDENTIFIER
		, PRODUCT_GENERATED_IDENTIFIER 
		, LOCATION_GENERATED_IDENTIFIER 
		, ORD_QTY
		, DEPARTMENT_SOURCE_IDENTIFIER
		, DEPARTMENT_GENERATED_ID
		, ORDER_STATUS_CODE
	FROM PO1 AS PO1
	INNER JOIN PO2 AS PO2
		ON PO1.ORDER_GENERATED_IDENTIFIER = PO2.ORDER_GENERATED_IDENTIFIER
	WHERE DEPARTMENT_SOURCE_IDENTIFIER IN ( SELECT * FROM GM_DEPTS )
)
,

RO AS 
(
	SELECT 
		ORDER_GENERATED_IDENTIFIER 
		, LOCATION_GENERATED_IDENTIFIER 
		, PRODUCT_GENERATED_IDENTIFIER 
		, SUPPLIER_GENERATED_IDENTIFIER 
		, RECEIPT_DATE 
		, PROCESS_DATE 
		, RECEIPT_QUANTITY 
	--	, RECEIPT_INVOICE_QUANTITY 
	--	, UNITS_PER_INNER 
	FROM KSFPA.MR2C.RECEIPT_DETAIL_WORK 
	WHERE 
		LOCATION_GENERATED_IDENTIFIER = '1040932400001'
		AND RECEIPT_DATE > '2022-02-20'
--		AND RECEIPT_DATE <= '2022-10-23'
)
,

SHORT_SHIPPED AS 
(
	SELECT 
		PO_.PRODUCT_GENERATED_IDENTIFIER 
		, PO_.ORDER_GENERATED_IDENTIFIER
		, ASKED_QTY 
		, RECIEVED_QTY 
		, ASKED_QTY - RECIEVED_QTY AS SHORT_SHIPPED_QTY
	FROM 
		(
			SELECT 
				PRODUCT_GENERATED_IDENTIFIER
				, ORDER_GENERATED_IDENTIFIER
				, SUM(ORD_QTY) AS ASKED_QTY 
			FROM PO
			GROUP BY 1,2
		)PO_
	LEFT JOIN 
		(
			SELECT 
				PRODUCT_GENERATED_IDENTIFIER
				, ORDER_GENERATED_IDENTIFIER
				, SUM(RECEIPT_QUANTITY) AS RECIEVED_QTY
			FROM RO
			GROUP BY 1,2
		)RO_ 
	ON RO_.PRODUCT_GENERATED_IDENTIFIER = PO_.PRODUCT_GENERATED_IDENTIFIER 
	AND RO_.ORDER_GENERATED_IDENTIFIER = PO_.ORDER_GENERATED_IDENTIFIER 
	--ORDER BY SHORT_SHIPPED_QTY
)
,

SHRINK AS
(
	SELECT
	    SS.PRODUCT_GENERATED_IDENTIFIER ,
	    MODE ( KC.PRODUCT_DESCRIPTION ) AS PRODUCT_DESCRIPTION ,
	    SUM( STOCK_ADJUSTMENT_COST_AMOUNT ) AS NET_SHRINK_VALUE,
	    SUM( STOCK_ADJUSTMENT_QUANTITY ) AS NET_SHRINK_QTY
	FROM
	    KSFPA.MR2.SS_STOCK_ADJUSTMENT SS
	    INNER JOIN KSFPA.MR2C."LOCATION" LOC 
	        ON SS.LOCATION_GENERATED_IDENTIFIER = LOC.LOCATION_GENERATED_IDENTIFIER
	    INNER JOIN KSFPA.MR2C.KEYCODE KC 
	        ON SS.PRODUCT_GENERATED_IDENTIFIER = KC.PRODUCT_GENERATED_IDENTIFIER
	WHERE
	        LOC.LOCATION_SOURCE_IDENTIFIER = 9324
	    AND PERIOD_END_DATE > '2022-02-20'
	    AND STOCK_ADJUSTMENT_REASON_CODE = '36'
	    AND KC.DEPARTMENT_SOURCE_IDENTIFIER IN ( SELECT * FROM GM_DEPTS )
	    AND KC.PRODUCT_SOURCE_IDENTIFIER IN ( SELECT * FROM SKUS_SUBSET )
	GROUP BY 1
	HAVING 
	    SUM( STOCK_ADJUSTMENT_QUANTITY ) > 0
)
,

FINAL_VIEW AS
(
	SELECT 
		COALESCE( SS.PRODUCT_GENERATED_IDENTIFIER , SH.PRODUCT_GENERATED_IDENTIFIER ) AS PRODUCT_GENERATED_IDENTIFIER 
		, SUM(NET_SHRINK_QTY) AS NET_SHRINK_QTY
		, SUM(NET_SHRINK_VALUE) AS NET_SHRINK_VALUE
		
		, SUM(ASKED_QTY) AS ASKED_QTY
		, SUM(RECIEVED_QTY) AS RECIEVED_QTY
		, SUM(SHORT_SHIPPED_QTY) AS SS_QTY
		, CASE  WHEN SUM( IFNULL ( ASKED_QTY, 0 ) ) != 0
				THEN SUM(SHORT_SHIPPED_QTY) / SUM(ASKED_QTY) 
				ELSE 0 END
			AS SS_QTY_REL	
		, MODE ( SH.PRODUCT_DESCRIPTION ) AS PRODUCT_DESCRIPTION 
		
	FROM SHORT_SHIPPED AS SS
	RIGHT JOIN SHRINK SH
		ON SS.PRODUCT_GENERATED_IDENTIFIER = SH.PRODUCT_GENERATED_IDENTIFIER
	GROUP BY 1 
	ORDER BY 1 DESC
)
,

FINAL_VIEW_FLAGS AS
(
	SELECT FINAL_VIEW.*
		, CASE WHEN SS_QTY > 0 THEN 1 ELSE 0 END AS SS_POS
		, CASE WHEN SS_QTY < 0 THEN 1 ELSE 0 END AS SS_NEG
		, CASE WHEN SS_QTY = 0 OR SS_QTY IS NULL THEN 1 ELSE 0 END AS SS_ZERO
		
		, CASE WHEN SS_QTY_REL >  0.05 THEN 1 ELSE 0 END AS SS_POS_FOS
		, CASE WHEN SS_QTY_REL < -0.05 THEN 1 ELSE 0 END AS SS_NEG_FOS
		, CASE  WHEN ( SS_QTY_REL <= 0.05 AND SS_QTY_REL >= -0.05 ) 
				OR SS_QTY_REL IS NULL 
				THEN 1 ELSE 0 
				END AS SS_ZERO_FOS
		, SL.FIRST_SALES_DATE
--		, YEAR ( FIRST_SALES_DATE ) AS FSD_YEAR
		, CASE  WHEN FIRST_SALES_DATE >= '2022-02-20' 
				THEN 1 ELSE 0 END AS FLAG_POST_STOCKTAKE
	FROM FINAL_VIEW
	LEFT JOIN SALES AS SL
		ON FINAL_VIEW.PRODUCT_GENERATED_IDENTIFIER = SL.PRODUCT_GENERATED_IDENTIFIER
	WHERE NOT ( SS_QTY = 0 AND NET_SHRINK_QTY IS NULL )
		AND FLAG_POST_STOCKTAKE = 1 
)



--SELECT
--	SS_POS , SS_ZERO , SS_NEG ,
----	SS_POS_FOS , SS_ZERO_FOS , SS_NEG_FOS ,
--	COUNT('NS')
--FROM FINAL_VIEW_FLAGS
--GROUP BY 1,2,3
--ORDER BY 1,2,3

--SELECT * FROM FINAL_VIEW_FLAGS

--SELECT FLAG_POST_STOCKTAKE , COUNT(*) FROM FINAL_VIEW_FLAGS GROUP BY 1


SELECT PRODUCT_DESCRIPTION , NET_SHRINK_VALUE , NET_SHRINK_QTY , SS_QTY AS SHORT_SHIPPED 
FROM FINAL_VIEW_FLAGS
WHERE ABS( SS_QTY ) = ABS( NET_SHRINK_QTY )
ORDER BY NET_SHRINK_VALUE DESC

;





