-----------For Instore----------------
SELECT 
COALESCE(REFUND_TABLE.DEPARTMENT,SALES_TABLE.DEPARTMENT) AS DEPARTMENT,
COALESCE(REFUND_TABLE.DEPARTMENT_DES,SALES_TABLE.DEPARTMENT_DES) as DEPARTMENT_DES,
COALESCE(REFUND_TABLE.CLASS,SALES_TABLE.CLASS) as CLASS,
COALESCE(REFUND_TABLE.CLASS_DES,SALES_TABLE.CLASS_DES) as CLASS_DES,
SUM(IFNULL(REFUND_TABLE.refund_price,0) )AS refund_price,
--SUM(Sales.SALES_TRN_ID_COUNT) AS SALES_TRN_ID_COUNT,
SUM(IFNULL(SALES_TABLE.sales_price,0)) AS sales_price
--SUM (REFUND_TABLE.Refund )AS REFUND_TRN_ID_COUNT,
--SUM(REFUND_TABLE.refund_price) AS refund_price ,
--SUM(SALES_TABLE.Sales) AS SALES_TRN_ID_COUNT,
--SUM(SALES_TABLE.sales_price)AS sales_price
FROM  
(
    SELECT Ref_table.M_STORE,keycode.DEPARTMENT_SOURCE_IDENTIFIER AS DEPARTMENT,
   keycode.CLASS_SOURCE_IDENTIFIER AS CLASS,keycode.DEPARTMENT_DESCRIPTION AS DEPARTMENT_DES, 
   keycode.CLASS_DESCRIPTION AS CLASS_DES,
   SUM(Sal_table.A_EXT_PR - A_EXT_DISC - (A_EXT_DISC*P_DISC/100)) AS refund_price,
   COUNT ( DISTINCT Ref_table.M_TRN_ID ) AS Refund
   FROM KSFPA.IPS_SALES.TRN_REFUND Ref_table

   INNER JOIN KSFPA.IPS_SALES.TRN_DETAIL Sal_table
   ON Ref_table.M_TRN_ID =Sal_table.M_TRN_ID
   AND Ref_table.M_STORE=Sal_table.M_STORE
   AND Ref_table.M_KD=Sal_table.M_KD

   INNER JOIN KSFPA.MR2C.KEYCODE keycode
   ON Ref_table.M_KD=keycode.PRODUCT_SOURCE_IDENTIFIER
   
   WHERE Ref_table.D_TRN_DATE BETWEEN '2023-01-01' AND '2023-06-30'
   AND Ref_table.M_PURCHASE_FROM_STORE < 9999
   GROUP BY 1,2,3,4,5
) REFUND_TABLE
  

FULL OUTER JOIN
  
(
   SELECT M_STORE,
   keycode.DEPARTMENT_SOURCE_IDENTIFIER AS DEPARTMENT,
   keycode.CLASS_SOURCE_IDENTIFIER AS CLASS, 
   keycode.DEPARTMENT_DESCRIPTION AS DEPARTMENT_DES, 
   keycode.CLASS_DESCRIPTION AS CLASS_DES,
   SUM(A_EXT_PR - A_EXT_DISC - (A_EXT_DISC*P_DISC/100) ) AS sales_price, 
   COUNT ( DISTINCT M_TRN_ID ) AS Sales
  FROM KSFPA.IPS_SALES.TRN_DETAIL Sal_table
   
  INNER JOIN KSFPA.MR2C.KEYCODE keycode
  ON Sal_table.M_KD=keycode.PRODUCT_SOURCE_IDENTIFIER
   
  WHERE D_TRN_DATE BETWEEN '2023-01-01' AND '2023-06-30'
  ----to get netvalue 
  AND  A_EXT_PR > 0
  ----to remove any void transaction 
  --AND F0_ITEMVOIDED = 0
  GROUP BY 1,2,3,4,5
)  SALES_TABLE 
  ON REFUND_TABLE.M_STORE = SALES_TABLE.M_STORE
  AND REFUND_TABLE.DEPARTMENT=SALES_TABLE.DEPARTMENT
  AND REFUND_TABLE.CLASS=SALES_TABLE.CLASS
  GROUP BY 1,2,3,4


--------- For Online------
SELECT 
COALESCE(Refund.DEPARTMENT,Sales.DEPARTMENT) AS DEPARTMENT,
COALESCE(Refund.DEPARTMENT_DES,Sales.DEPARTMENT_DES) as DEPARTMENT_DES,
COALESCE(Refund.CLASS,Sales.CLASS) as CLASS,
COALESCE(Refund.CLASS_DES,Sales.CLASS_DES) as CLASS_DES,
--Refund.REASON_DESCRIPTION,
SUM(IFNULL(Refund.refund_price,0) )AS refund_price,
--SUM(Sales.SALES_TRN_ID_COUNT) AS SALES_TRN_ID_COUNT,
SUM(IFNULL(Sales.sales_price,0)) AS sales_price

--SUM(Refund.REFUND_TRN_ID_COUNT) AS REFUND_TRN_ID_COUNT,
--SUM(Refund.refund_price)AS refund_price,
--SUM(Sales.SALES_TRN_ID_COUNT) AS SALES_TRN_ID_COUNT,
--SUM(Sales.sales_price) AS sales_price
FROM
(
    SELECT DIM_TABLE.LOCATION_CODE,keycode.DEPARTMENT_CODE AS DEPARTMENT,keycode.CLASS_CODE AS CLASS,
    keycode.DEPARTMENT_DESCRIPTION AS DEPARTMENT_DES, keycode.CLASS_DESCRIPTION AS CLASS_DES,
  -- Dim_reason.REASON_DESCRIPTION,
    SUM (TOTAL_SELLING_PRICE_WITH_GST) AS refund_price,
    COUNT(DISTINCT DD_EXTERNALORDERID)AS REFUND_TRN_ID_COUNT
    FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.SALES.FACT_SALES_DETAIL ON_TABLE
	INNER JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_LOCATION DIM_TABLE 
    ON ON_TABLE.FK_LOCATION_ID = DIM_TABLE.SK_LOCATION_ID

  -- Inner join KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.SALES.DIM_RETURN_REASON Dim_reason 
    --On ON_TABLE.FK_RETURN_REASON_ID =Dim_reason.SK_RETURN_REASON_ID

   INNER JOIN  KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT keycode
   ON ON_TABLE.FK_PRODUCT_ID=keycode.SK_PRODUCT_ID

    WHERE FK_DATE_ID BETWEEN '20230101' AND '20230630'
    AND TRANSACTION_VOIDED = 0
    AND TRANSACTION_SUSPENDED = 0
    AND TRANSACTION_GIFTVOUCHER = 0
    AND TRANSACTION_GIFTCARD = 0
    AND FK_SOURCE_SYSTEM_ID = 15
    AND FK_TRANSACTION_TYPE_ID <> 3701
    AND QUANTITY_SOLD < 0
    GROUP BY 1,2,3,4,5
) Refund

    
FULL OUTER JOIN

(
   SELECT DIM_TABLE.LOCATION_CODE,
   keycode.DEPARTMENT_CODE AS DEPARTMENT,
   keycode.CLASS_CODE AS CLASS,
   keycode.DEPARTMENT_DESCRIPTION AS DEPARTMENT_DES,
   keycode.CLASS_DESCRIPTION AS CLASS_DES,
   SUM(TOTAL_SELLING_PRICE_WITH_GST) AS sales_price,
   COUNT(DISTINCT DD_EXTERNALORDERID)AS SALES_TRN_ID_COUNT
   FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.SALES.FACT_SALES_DETAIL ON_TABLE
   INNER join KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_LOCATION DIM_TABLE
   ON ON_TABLE.FK_LOCATION_ID = DIM_TABLE.SK_LOCATION_ID
    
   INNER JOIN  KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT keycode
   ON ON_TABLE.FK_PRODUCT_ID=keycode.SK_PRODUCT_ID
    
   WHERE FK_DATE_ID BETWEEN '20230101' AND '20230630'
   AND TRANSACTION_VOIDED = 0
   AND TRANSACTION_SUSPENDED = 0
   AND TRANSACTION_GIFTVOUCHER = 0
   AND TRANSACTION_GIFTCARD = 0
   AND FK_SOURCE_SYSTEM_ID = 15
   AND FK_TRANSACTION_TYPE_ID <> 3701
   AND QUANTITY_SOLD > 0
   GROUP BY 1,2,3,4,5
) Sales
   ON Refund.LOCATION_CODE=Sales.LOCATION_CODE
   AND Refund.DEPARTMENT=Sales.DEPARTMENT
   AND Refund.CLASS=Sales.CLASS
   GROUP  BY 1,2,3,4