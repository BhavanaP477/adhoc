
CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.MR_DATA_FY_24 AS
(
WITH
W_MANIFEST AS (
  SELECT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD.DESPATCH_QUANTITY) AS MANIFEST
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  LEFT JOIN KSFPA.MR2.TRANSFER_DESPATCH DES ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  WHERE
  (DES.TRANSFER_TYPE_CODE = 'DD' or DES.TRANSFER_TYPE_CODE = 'XD') AND PRD.EXPIRY_DATE = '9999-12-31'
  AND REC.RECEIPT_DATE > '2023-02-19' 
  AND REC.RECEIPT_DATE <= '2023-10-15'
  AND DES.EXPIRY_DATE = '9999-12-31'
  AND PRD.EXPIRY_DATE = '9999-12-31'
  AND REC.EXPIRY_DATE = '9999-12-31'
  and substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000
  GROUP BY
  REC.LOCATION_GENERATED_IDENTIFIER,
  PRD.PRODUCT_GENERATED_IDENTIFIER
),

W_SALES AS (
  SELECT DISTINCT
  A.PRODUCT_GENERATED_IDENTIFIER,
  A.LOCATION_GENERATED_IDENTIFIER,
  SUM(WEEKLY_NET_SALES_QUANTITY) * -1.00 AS SALES 
  FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES A
  WHERE
  WEEK_END_DATE > '2023-02-19' 
  AND WEEK_END_DATE <= '2023-10-15'
  GROUP BY
  A.PRODUCT_GENERATED_IDENTIFIER,
  A.LOCATION_GENERATED_IDENTIFIER
),

W_REFUND AS(
SELECT TO_NUMBER(CONCAT(M_KD, '00004')) AS PRODUCT_GENERATED_IDENTIFIER, 
TO_NUMBER(CONCAT('1040',M_STORE,'00001')) AS LOCATION_GENERATED_IDENTIFIER,
SUM(Q_UNITS) * -1.00 AS REFUND
FROM KSFPA.IPS_SALES.TRN_REFUND
WHERE D_TRN_DATE > '2023-02-19' 
AND D_TRN_DATE <= '2023-10-15'
GROUP BY 
M_KD, M_STORE
),

W_SHRINK AS (
  SELECT DISTINCT
  A.PRODUCT_GENERATED_IDENTIFIER,
  A.LOCATION_GENERATED_IDENTIFIER,
  SUM(STOCK_ADJUSTMENT_QUANTITY) AS SHRINK
  FROM KSFPA.MR2.SS_STOCK_ADJUSTMENT A
  WHERE
  STOCK_ADJUSTMENT_REASON_CODE IN ('00','02','03','04','05','07','08','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')
  AND PERIOD_END_DATE > '2023-02-19' 
  AND PERIOD_END_DATE <= '2023-10-15'
  GROUP BY
  A.PRODUCT_GENERATED_IDENTIFIER,
  A.LOCATION_GENERATED_IDENTIFIER
),

W_PO AS (
  SELECT DISTINCT
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER,
  SUM(LOC_PROD.Receipt_QUANTITY) AS PO
  FROM KSFPA.MR2.LOCATION_RECEIPT_PRODUCT LOC_PROD
  JOIN KSFPA.MR2.LOCATION_RECEIPT LOC
  ON LOC.RECEIPT_GENERATED_IDENTIFIER = LOC_PROD.RECEIPT_GENERATED_IDENTIFIER
  WHERE
  LOC_PROD.EXPIRY_DATE = '9999-12-31' 
  AND LOC_PROD.EFFECTIVE_DATE > '2023-02-19' 
  AND LOC_PROD.EFFECTIVE_DATE < '2023-10-15'
  AND LOC.EXPIRY_DATE = '9999-12-31' AND substring(LOC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER
),

W_ITC AS (

  SELECT DISTINCT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD.DESPATCH_QUANTITY-PRD.RETURNED_QUANTITY) AS ITC
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC 
  ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  JOIN KSFPA.MR2.TRANSFER_DESPATCH DES 
  ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  WHERE
  DES.TRANSFER_TYPE_CODE = 'SS' 
  AND PRD.EXPIRY_DATE = '9999-12-31' 
  AND DES.EXPIRY_DATE = '9999-12-31'
  AND REC.RECEIPT_DATE > '2023-02-19' 
  AND REC.RECEIPT_DATE <= '2023-10-15'
  AND REC.EXPIRY_DATE = '9999-12-31' 
  and substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY REC.LOCATION_GENERATED_IDENTIFIER, PRD.PRODUCT_GENERATED_IDENTIFIER
),


W_ITC_DES AS(
  SELECT 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, 
  DES_ITC.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD_ITC.DESPATCH_QUANTITY-PRD_ITC.RETURNED_QUANTITY) * -1 AS DES_ITC
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_ITC
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_ITC
  ON DES_ITC.TRANSFER_GENERATED_IDENTIFIER = PRD_ITC.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_ITC.TRANSFER_TYPE_CODE = 'SS' 
  AND PRD_ITC.EXPIRY_DATE = '9999-12-31' 
  AND DES_ITC.EXPIRY_DATE = '9999-12-31' 
  AND DES_ITC.DESPATCH_DATE > '2023-02-19' 
  AND DES_ITC.DESPATCH_DATE < '2023-10-15'
  GROUP BY 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, DES_ITC.LOCATION_GENERATED_IDENTIFIER
),

W_RLO AS (
  SELECT 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, 
  DES_RLO.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD_RLO.DESPATCH_QUANTITY) * -1 AS RLO
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_RLO
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_RLO
  ON DES_RLO.TRANSFER_GENERATED_IDENTIFIER = PRD_RLO.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_RLO.TRANSFER_TYPE_CODE = 'SR' 
  AND PRD_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.DESPATCH_DATE > '2023-02-19' 
  AND DES_RLO.DESPATCH_DATE <= '2023-10-15'
  GROUP BY 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, DES_RLO.LOCATION_GENERATED_IDENTIFIER
),

W_KEY_CODE AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER, 
  DEPARTMENT_DESCRIPTION, 
  SEASON_CODE
  FROM KSFPA.MR2C.KEYCODE
  WHERE 
  DEPARTMENT_DESCRIPTION not in ('GARDEN GREENS','MAGAZINES','REUSABLE BAGS','CARDS & WRAP','PHOTO CENTRE','GIFT CARDS & RCHRG')
)

SELECT MR.*, (MR_MANIFEST + MR_SALES + MR_SHRINK + MR_ITC + MR_RLO + MR_PO) AS MR_DERIVED_SOH FROM
(
  SELECT COALESCE(MAN.PRODUCT_GENERATED_IDENTIFIER, SAL.PRODUCT_GENERATED_IDENTIFIER, REF.PRODUCT_GENERATED_IDENTIFIER, SHR.PRODUCT_GENERATED_IDENTIFIER, 
    ITC.PRODUCT_GENERATED_IDENTIFIER, DES_ITC.PRODUCT_GENERATED_IDENTIFIER, RLO.PRODUCT_GENERATED_IDENTIFIER, PO.PRODUCT_GENERATED_IDENTIFIER) AS PRODUCT_GENERATED_IDENTIFIER,
  COALESCE(MAN.LOCATION_GENERATED_IDENTIFIER, SAL.LOCATION_GENERATED_IDENTIFIER, REF.LOCATION_GENERATED_IDENTIFIER, SHR.LOCATION_GENERATED_IDENTIFIER, 
    ITC.LOCATION_GENERATED_IDENTIFIER, DES_ITC.LOCATION_GENERATED_IDENTIFIER, RLO.LOCATION_GENERATED_IDENTIFIER, PO.LOCATION_GENERATED_IDENTIFIER) AS LOCATION_GENERATED_IDENTIFIER, 
  SUM(ZEROIFNULL(MAN.MANIFEST)) AS MR_MANIFEST,
  SUM(ZEROIFNULL(SAL.SALES) - ZEROIFNULL(REF.REFUND)) AS MR_SALES,
  SUM(ZEROIFNULL(REF.REFUND)) AS MR_REFUND,
  SUM(ZEROIFNULL(SHR.SHRINK)) AS MR_SHRINK, 
  SUM(ZEROIFNULL(ITC.ITC) + ZEROIFNULL(DES_ITC.DES_ITC)) AS MR_ITC,
  SUM(ZEROIFNULL(RLO.RLO)) AS MR_RLO,
  --SUM(0) AS MR_PO
  SUM(ZEROIFNULL(PO.PO)) AS MR_PO
  FROM W_MANIFEST MAN 

  FULL OUTER JOIN W_SALES SAL 
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SAL.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SAL.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_REFUND REF 
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = REF.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = REF.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_SHRINK SHR
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SHR.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SHR.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_ITC ITC
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = ITC.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = ITC.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_ITC_DES DES_ITC
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = DES_ITC.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = DES_ITC.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_RLO RLO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = RLO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = RLO.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_PO PO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = PO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = PO.LOCATION_GENERATED_IDENTIFIER

  GROUP BY 1,2

) MR

JOIN W_KEY_CODE KEY_CODE
ON MR.PRODUCT_GENERATED_IDENTIFIER = KEY_CODE.PRODUCT_GENERATED_IDENTIFIER 
  )


---------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.IPS_DATA_FY_24 AS
(
WITH 
W_MANIFEST AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS MANIFEST
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE
  STOCK_MOVEMENT_SOURCE = '1Manifest' 
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  ),

W_SALES AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS SALES
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE 
  (DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  )
  AND (
  ((STOCK_MOVEMENT_SOURCE = 'OMS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')))
  OR ((STOCK_MOVEMENT_SOURCE = 'IPS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')) AND (STOCK_MOVEMENT_REFERENCE_ID IS NULL OR NOT(LOWER(STOCK_MOVEMENT_REFERENCE_ID) LIKE('inc%'))))
  OR ((STOCK_MOVEMENT_SOURCE = 'WEB_ADJ') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')))
  OR STOCK_MOVEMENT_SOURCE = 'SALES') 
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  ),


W_REFUND AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS REFUND
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE
  STOCK_MOVEMENT_SOURCE = 'REFUND' 
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  ),

W_SHRINK AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS SHRINK
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE
  ((STOCK_MOVEMENT_SOURCE = 'Shrinkage' AND  STOCK_MOVEMENT_CODE IS NULL) OR STOCK_MOVEMENT_CODE IN ('00','0','02','2','03','3','04','4','5','05','7','07','08','8','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP'))
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  ),

W_IT AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS IT_ADJ
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE
  ((STOCK_MOVEMENT_SOURCE = 'IPS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')) AND (LOWER(STOCK_MOVEMENT_REFERENCE_ID) LIKE('inc%')))
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  ),


W_ITC AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS ITC
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE 
  --(STOCK_MOVEMENT_SOURCE = 'ERD_ITC_S' OR STOCK_MOVEMENT_SOURCE = 'ERD_ITC_R')
  STOCK_MOVEMENT_CODE IN ('12')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
),

W_RLO AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  SUM(STOCK_MOVEMENT_QUANTITY) AS RLO
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE 
  STOCK_MOVEMENT_SOURCE IN ('RLO','ERD_RLO')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
),

W_PO AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  SUM(STOCK_MOVEMENT_QUANTITY) AS PO
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT"
  WHERE 
  (STOCK_MOVEMENT_CATEGORY = 'SRSD'
  OR STOCK_MOVEMENT_SOURCE = 'ERD_SRS')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
),

W_KEY_CODE AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER, 
  DEPARTMENT_DESCRIPTION, 
  SEASON_CODE
  FROM KSFPA.MR2C.KEYCODE
  WHERE 
  DEPARTMENT_DESCRIPTION not in ('GARDEN GREENS','MAGAZINES','REUSABLE BAGS','CARDS & WRAP','PHOTO CENTRE','GIFT CARDS & RCHRG')
)

SELECT IPS.*, (IPS_MANIFEST + IPS_SALES + IPS_SHRINK + IPS_IT_ADJ + IPS_ITC + IPS_RLO + IPS_PO) AS IPS_DERIVED_SOH FROM
(
  SELECT COALESCE(MAN.PRODUCT_GENERATED_IDENTIFIER, SAL.PRODUCT_GENERATED_IDENTIFIER, REF.PRODUCT_GENERATED_IDENTIFIER, SHR.PRODUCT_GENERATED_IDENTIFIER, 
    IT.PRODUCT_GENERATED_IDENTIFIER, ITC.PRODUCT_GENERATED_IDENTIFIER, RLO.PRODUCT_GENERATED_IDENTIFIER, PO.PRODUCT_GENERATED_IDENTIFIER) AS PRODUCT_GENERATED_IDENTIFIER,
  COALESCE(MAN.LOCATION_GENERATED_IDENTIFIER, SAL.LOCATION_GENERATED_IDENTIFIER, REF.LOCATION_GENERATED_IDENTIFIER, SHR.LOCATION_GENERATED_IDENTIFIER, 
    IT.LOCATION_GENERATED_IDENTIFIER, ITC.LOCATION_GENERATED_IDENTIFIER, RLO.LOCATION_GENERATED_IDENTIFIER, PO.LOCATION_GENERATED_IDENTIFIER) AS LOCATION_GENERATED_IDENTIFIER, 
  SUM(ZEROIFNULL(MAN.MANIFEST)) AS IPS_MANIFEST,
  SUM(ZEROIFNULL(SAL.SALES)) AS IPS_SALES,
  SUM(ZEROIFNULL(REF.REFUND)) AS IPS_REFUND,
  SUM(ZEROIFNULL(SHR.SHRINK)) AS IPS_SHRINK,
  SUM(ZEROIFNULL(IT.IT_ADJ)) AS IPS_IT_ADJ,
  SUM(ZEROIFNULL(ITC.ITC)) AS IPS_ITC,
  SUM(ZEROIFNULL(RLO.RLO)) AS IPS_RLO, 
  SUM(ZEROIFNULL(PO.PO)) AS IPS_PO
  --SUM(0) AS IPS_PO
  FROM W_MANIFEST MAN 

  FULL OUTER JOIN W_SALES SAL 
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SAL.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SAL.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_REFUND REF 
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = REF.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = REF.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_SHRINK SHR
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SHR.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SHR.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_IT IT
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = IT.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = IT.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_ITC ITC
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = ITC.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = ITC.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_RLO RLO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = RLO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = RLO.LOCATION_GENERATED_IDENTIFIER

  FULL OUTER JOIN W_PO PO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = PO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = PO.LOCATION_GENERATED_IDENTIFIER

  GROUP BY 1,2

) IPS

JOIN W_KEY_CODE KEY_CODE
ON TO_NUMBER(CONCAT(IPS.PRODUCT_GENERATED_IDENTIFIER, '00004')) = KEY_CODE.PRODUCT_GENERATED_IDENTIFIER
)


-----------------------------------------------------------------------------------------------------------------------------------------------------





CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.SUMMARY_PAGE_FY_24 AS
(
SELECT 
MR.PRODUCT_GENERATED_IDENTIFIER AS PRODUCT_GENERATED_IDENTIFIER,
MR.LOCATION_GENERATED_IDENTIFIER AS LOCATION_GENERATED_IDENTIFIER,
IPS.PRODUCT_GENERATED_IDENTIFIER AS PRODUCT_SOURCE_IDENTIFIER,
IPS.LOCATION_GENERATED_IDENTIFIER AS LOCATION_SOURCE_IDENTIFIER,
'2023-02-19' AS START_DATE,
'2023-10-15' AS END_DATE,
LOC.LOCATION_NAME,
LOC.STATE,
KEY_CODE.PRODUCT_DESCRIPTION,
KEY_CODE.DEPARTMENT_DESCRIPTION,
IPS.IPS_MANIFEST,
MR.MR_MANIFEST,
IPS.IPS_SALES,
MR.MR_SALES,
IPS.IPS_REFUND,
MR.MR_REFUND,
IPS.IPS_SHRINK,
MR.MR_SHRINK,
IPS.IPS_IT_ADJ,
IPS.IPS_ITC,
MR.MR_ITC,
IPS.IPS_RLO,
MR.MR_RLO,
IPS.IPS_PO,
MR.MR_PO,
IPS.IPS_DERIVED_SOH,
MR.MR_DERIVED_SOH,
IPS_MANIFEST - MR_MANIFEST AS DIFF_MANIFEST,
IPS_SALES - MR_SALES AS DIFF_SALES,
IPS_REFUND - MR_REFUND AS DIFF_REFUND,
IPS_SHRINK - MR_SHRINK AS DIFF_SHRINK,
IPS_IT_ADJ AS DIFF_IT_ADJ,
IPS_ITC - MR_ITC AS DIFF_ITC,
IPS_RLO - MR_RLO AS DIFF_RLO,
IPS_PO - MR_PO AS DIFF_PO,
(DIFF_MANIFEST + DIFF_SALES + DIFF_REFUND + DIFF_SHRINK + DIFF_ITC + DIFF_RLO + DIFF_PO) AS DIFF_DERIVED_SOH,
IFF(DIFF_MANIFEST != 0, 1, 0) AS FLAG_MANIFEST,
IFF(DIFF_SALES != 0, 1, 0) AS FLAG_SALES,
IFF(DIFF_REFUND != 0, 1, 0) AS FLAG_REFUND,
IFF(DIFF_SHRINK != 0, 1, 0) AS FLAG_SHRINK,
IFF(DIFF_IT_ADJ != 0, 1, 0) AS FLAG_IT_ADJ,
IFF(DIFF_ITC != 0, 1, 0) AS FLAG_ITC,
IFF(DIFF_RLO != 0, 1, 0) AS FLAG_RLO,
IFF(DIFF_PO != 0, 1, 0) AS FLAG_PO,
IFF(DIFF_DERIVED_SOH != 0, 1, 0) AS FLAG_DERIVED_SOH,
IFF((ltrim(CASE WHEN FLAG_MANIFEST = 1 THEN 'MANIFEST' ELSE '' END||CASE WHEN FLAG_SALES = 1 THEN ',SALES' ELSE '' END||CASE WHEN FLAG_REFUND = 1 THEN ',REFUND' ELSE '' END ||CASE WHEN FLAG_SHRINK = 1 THEN ',SHRINK' ELSE '' END ||CASE WHEN FLAG_IT_ADJ = 1 THEN ',IT_ADJ' ELSE '' END ||CASE WHEN FLAG_ITC = 1 THEN ',ITC' ELSE '' END ||CASE WHEN FLAG_RLO = 1 THEN ',RLO' ELSE '' END ||CASE WHEN FLAG_PO = 1 THEN ',PO' ELSE '' END, ',')) = '', NULL, (ltrim(CASE WHEN FLAG_MANIFEST = 1 THEN 'MANIFEST' ELSE '' END||CASE WHEN FLAG_SALES = 1 THEN ',SALES' ELSE '' END ||CASE WHEN FLAG_REFUND = 1 THEN ',REFUND' ELSE '' END  ||CASE WHEN FLAG_SHRINK = 1 THEN ',SHRINK' ELSE '' END ||CASE WHEN FLAG_IT_ADJ = 1 THEN ',IT_ADJ' ELSE '' END ||CASE WHEN FLAG_ITC = 1 THEN ',ITC' ELSE '' END ||CASE WHEN FLAG_RLO = 1 THEN ',RLO' ELSE '' END ||CASE WHEN FLAG_PO = 1 THEN ',PO' ELSE '' END, ','))) AS FLAG_REASON,
b.ADJUSTMENT,
MR_SOH.MR_CURR_SOH, IPS_SOH.SOH AS IPS_CURR_SOH
FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.IPS_DATA_FY_24 IPS
JOIN KSF_DATAANALYTICS_DEV.DS_SHRINK.MR_DATA_FY_24 MR
ON TO_NUMBER(CONCAT(IPS.PRODUCT_GENERATED_IDENTIFIER, '00004')) = MR.PRODUCT_GENERATED_IDENTIFIER
AND TO_NUMBER(CONCAT('1040',IPS.LOCATION_GENERATED_IDENTIFIER,'00001')) = MR.LOCATION_GENERATED_IDENTIFIER
JOIN KSFPA.MR2C.KEYCODE KEY_CODE
ON MR.PRODUCT_GENERATED_IDENTIFIER = KEY_CODE.PRODUCT_GENERATED_IDENTIFIER
JOIN KSFPA.MR2C.LOCATION LOC
ON MR.LOCATION_GENERATED_IDENTIFIER = LOC.LOCATION_GENERATED_IDENTIFIER
LEFT JOIN
(SELECT PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, SUM(STOCK_ADJUSTMENT_QUANTITY) AS ADJUSTMENT
FROM KSFPA.MR2.SS_STOCK_ADJUSTMENT
WHERE STOCK_ADJUSTMENT_REASON_CODE = '06'
AND PERIOD_END_DATE > '2023-02-19' AND PERIOD_END_DATE <= '2023-10-15'
GROUP BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER) b
ON MR.PRODUCT_GENERATED_IDENTIFIER = b.PRODUCT_GENERATED_IDENTIFIER
AND MR.LOCATION_GENERATED_IDENTIFIER = b.LOCATION_GENERATED_IDENTIFIER
LEFT JOIN (SELECT PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, 
DAILY_STOCK_ON_HAND_QUANTITY AS MR_CURR_SOH
FROM KSFPA.MR2C.DAILY_SOH
WHERE DAY_DATE > '2023-02-19'
QUALIFY ROW_NUMBER() OVER(PARTITION BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER ORDER BY DAY_DATE DESC) = 1) MR_SOH
ON MR.PRODUCT_GENERATED_IDENTIFIER = MR_SOH.PRODUCT_GENERATED_IDENTIFIER
AND MR.LOCATION_GENERATED_IDENTIFIER = MR_SOH.LOCATION_GENERATED_IDENTIFIER
LEFT JOIN KSFPA.SOH.SOH_REALTIME IPS_SOH
ON IPS.PRODUCT_GENERATED_IDENTIFIER = IPS_SOH.M_KD
AND IPS.LOCATION_GENERATED_IDENTIFIER = IPS_SOH.STR_ID
)



-----------------------------------------------------------------------------------------------------------------------------------------------------





CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.MR_DETAIL_FY_24 AS
(
WITH
W_MANIFEST AS (
  SELECT DISTINCT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'MANIFEST' AS LINE_ITEM,
  SUM(PRD.DESPATCH_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  LEFT JOIN KSFPA.MR2.TRANSFER_DESPATCH DES ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = REC.RECEIPT_DATE
  WHERE
  (DES.TRANSFER_TYPE_CODE = 'DD' or DES.TRANSFER_TYPE_CODE = 'XD') 
  AND DES.EXPIRY_DATE = '9999-12-31'
  AND PRD.EXPIRY_DATE = '9999-12-31'
  AND REC.RECEIPT_DATE > '2023-02-19' 
  AND REC.RECEIPT_DATE <= '2023-10-15'
  AND REC.EXPIRY_DATE = '9999-12-31' and substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY REC.LOCATION_GENERATED_IDENTIFIER, PRD.PRODUCT_GENERATED_IDENTIFIER, DATE_
),

W_SALES AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'SALES' AS LINE_ITEM,
  SUM(WEEKLY_NET_SALES_QUANTITY) * -1.00 AS LINE_VALUE 
  FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES S
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = S.WEEK_END_DATE 
  WHERE
  WEEK_END_DATE > '2023-02-19' 
  AND WEEK_END_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_REFUND AS(
SELECT 
TO_NUMBER(CONCAT(M_KD, '00004')) AS PRODUCT_GENERATED_IDENTIFIER, 
TO_NUMBER(CONCAT('1040',M_STORE,'00001')) AS LOCATION_GENERATED_IDENTIFIER,
CALENDAR_WEEK_END_DATE AS DATE_,
'REFUND' AS LINE_ITEM,
SUM(Q_UNITS) * -1.00 AS LINE_VALUE
FROM KSFPA.IPS_SALES.TRN_REFUND T
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
ON D.DATE = T.D_TRN_DATE 
WHERE D_TRN_DATE > '2023-02-19' 
AND D_TRN_DATE <= '2023-10-15'
GROUP BY 
M_KD, M_STORE, DATE_
),

W_SHRINK AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'SHRINK' AS LINE_ITEM,
  SUM(STOCK_ADJUSTMENT_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.SS_STOCK_ADJUSTMENT S
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = S.PERIOD_END_DATE 
  WHERE
  STOCK_ADJUSTMENT_REASON_CODE IN ('00','02','03','04','05','07','08','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')
  AND PERIOD_END_DATE > '2023-02-19' 
  AND PERIOD_END_DATE <= '2023-10-15'
  GROUP BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_PO AS (
  SELECT DISTINCT
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER,
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'PO' AS LINE_ITEM,
  SUM(LOC_PROD.Receipt_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.LOCATION_RECEIPT_PRODUCT LOC_PROD
  JOIN KSFPA.MR2.LOCATION_RECEIPT LOC
  ON LOC.RECEIPT_GENERATED_IDENTIFIER = LOC_PROD.RECEIPT_GENERATED_IDENTIFIER
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = LOC_PROD.EFFECTIVE_DATE
  WHERE
  LOC_PROD.EXPIRY_DATE = '9999-12-31' AND  LOC_PROD.EFFECTIVE_DATE > '2023-02-19' 
  AND LOC_PROD.EFFECTIVE_DATE <= '2023-10-15'
  AND LOC.EXPIRY_DATE = '9999-12-31' AND substring(LOC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY LOC_PROD.PRODUCT_GENERATED_IDENTIFIER, LOC.LOCATION_GENERATED_IDENTIFIER, DATE_
),


W_ITC AS (
  SELECT DISTINCT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'ITC' AS LINE_ITEM,
  SUM(PRD.DESPATCH_QUANTITY-PRD.RETURNED_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  LEFT JOIN KSFPA.MR2.TRANSFER_DESPATCH DES ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = REC.RECEIPT_DATE
  WHERE
  DES.TRANSFER_TYPE_CODE = 'SS'
  AND REC.RECEIPT_DATE > '2023-02-19' 
  AND REC.RECEIPT_DATE <= '2023-10-15'
  AND DES.EXPIRY_DATE = '9999-12-31'
  AND PRD.EXPIRY_DATE = '9999-12-31'
  AND REC.EXPIRY_DATE = '9999-12-31' 
  AND substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY REC.LOCATION_GENERATED_IDENTIFIER, PRD.PRODUCT_GENERATED_IDENTIFIER, DATE_
),


W_ITC_DES AS(
  SELECT 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, 
  DES_ITC.LOCATION_GENERATED_IDENTIFIER,
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'DES_ITC' AS LINE_ITEM,
  SUM(PRD_ITC.DESPATCH_QUANTITY-PRD_ITC.RETURNED_QUANTITY) * -1 AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_ITC
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_ITC
  ON DES_ITC.TRANSFER_GENERATED_IDENTIFIER = PRD_ITC.TRANSFER_GENERATED_IDENTIFIER
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = DES_ITC.DESPATCH_DATE
  WHERE 
  DES_ITC.TRANSFER_TYPE_CODE = 'SS' 
  AND PRD_ITC.EXPIRY_DATE = '9999-12-31'
  AND DES_ITC.EXPIRY_DATE = '9999-12-31'
  AND DES_ITC.DESPATCH_DATE > '2023-02-19' 
  AND DES_ITC.DESPATCH_DATE < '2023-10-15'
  GROUP BY 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, DES_ITC.LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_RLO AS (
  SELECT 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, 
  DES_RLO.LOCATION_GENERATED_IDENTIFIER,
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'RLO' AS LINE_ITEM,
  SUM(PRD_RLO.DESPATCH_QUANTITY) * -1 AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_RLO
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = DES_RLO.DESPATCH_DATE
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_RLO
  ON DES_RLO.TRANSFER_GENERATED_IDENTIFIER = PRD_RLO.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_RLO.TRANSFER_TYPE_CODE = 'SR' 
  AND PRD_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.DESPATCH_DATE > '2023-02-19' 
  AND DES_RLO.DESPATCH_DATE <= '2023-10-15'
  GROUP BY PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, DES_RLO.LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_SOH AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  WEEK_END_DATE AS DATE_,
  'SOH' AS LINE_ITEM,
  SUM(STOCK_ON_HAND_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2C.WEEKLY_LOCATION_STOCK
  WHERE
  WEEK_END_DATE > '2023-02-19' 
  AND WEEK_END_DATE <= '2023-10-15'
  GROUP BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, WEEK_END_DATE
)

SELECT MR.*, sm.PRODUCT_SOURCE_IDENTIFIER,
sm.LOCATION_SOURCE_IDENTIFIER,sm.LOCATION_NAME,sm.STATE,sm.PRODUCT_DESCRIPTION,sm.DEPARTMENT_DESCRIPTION,
DENSE_RANK() OVER (ORDER BY MR.PRODUCT_GENERATED_IDENTIFIER, MR.LOCATION_GENERATED_IDENTIFIER) AS rnk FROM
(
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_MANIFEST

  UNION

  SELECT 
  coalesce(s.PRODUCT_GENERATED_IDENTIFIER, r.PRODUCT_GENERATED_IDENTIFIER) AS PRODUCT_GENERATED_IDENTIFIER,
  coalesce(s.LOCATION_GENERATED_IDENTIFIER, r.LOCATION_GENERATED_IDENTIFIER) AS LOCATION_GENERATED_IDENTIFIER,
  coalesce(s.DATE_, r.DATE_) AS DATE_,
  --coalesce(s.LINE_ITEM, r.LINE_ITEM) AS LINE_ITEM,
  'SALES' AS LINE_ITEM,
  (IFNULL(s.LINE_VALUE,0) - IFNULL(r.LINE_VALUE,0)) AS LINE_VALUE
  FROM W_SALES s
  FULL OUTER JOIN W_REFUND r
  ON s.PRODUCT_GENERATED_IDENTIFIER = r.PRODUCT_GENERATED_IDENTIFIER 
  AND s.LOCATION_GENERATED_IDENTIFIER = r.LOCATION_GENERATED_IDENTIFIER
  AND s.DATE_ = r.DATE_

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_REFUND

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SHRINK

  UNION

  SELECT 
  coalesce(w.PRODUCT_GENERATED_IDENTIFIER, des.PRODUCT_GENERATED_IDENTIFIER) AS PRODUCT_GENERATED_IDENTIFIER,
  coalesce(w.LOCATION_GENERATED_IDENTIFIER, des.LOCATION_GENERATED_IDENTIFIER) AS LOCATION_GENERATED_IDENTIFIER,
  coalesce(w.DATE_, des.DATE_) AS DATE_,
  --coalesce(w.LINE_ITEM, des.LINE_ITEM) AS LINE_ITEM,
  'ITC' AS LINE_ITEM,
  (IFNULL(w.LINE_VALUE,0) + IFNULL(des.LINE_VALUE,0)) AS LINE_VALUE
  FROM W_ITC w
  FULL OUTER JOIN W_ITC_DES des
  ON w.PRODUCT_GENERATED_IDENTIFIER = des.PRODUCT_GENERATED_IDENTIFIER 
  AND w.LOCATION_GENERATED_IDENTIFIER = des.LOCATION_GENERATED_IDENTIFIER
  AND w.DATE_ = des.DATE_

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_RLO 

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_PO

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SOH
)MR

JOIN KSF_DATAANALYTICS_DEV.DS_SHRINK.SUMMARY_PAGE_FY_24 sm 
ON MR.PRODUCT_GENERATED_IDENTIFIER = sm.PRODUCT_GENERATED_IDENTIFIER
AND MR.LOCATION_GENERATED_IDENTIFIER = sm.LOCATION_GENERATED_IDENTIFIER

WHERE sm.FLAG_REASON IS NOT NULL
)


------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.IPS_DETAIL_FY_24 AS
(
WITH 
W_MANIFEST AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  CALENDAR_WEEK_END_DATE AS DATE_,
  'MANIFEST' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE
  STOCK_MOVEMENT_SOURCE = '1Manifest' 
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
  ),

W_SALES AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'SALES' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE 
  (DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  )
  AND (
  ((STOCK_MOVEMENT_SOURCE = 'OMS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP'))) 
  OR ((STOCK_MOVEMENT_SOURCE = 'IPS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')) AND (STOCK_MOVEMENT_REFERENCE_ID IS NULL OR NOT(LOWER(STOCK_MOVEMENT_REFERENCE_ID) LIKE('inc%'))))
  OR ((STOCK_MOVEMENT_SOURCE = 'WEB_ADJ') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')))
  OR STOCK_MOVEMENT_SOURCE = 'SALES') 
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
  ),

W_REFUND AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  CALENDAR_WEEK_END_DATE AS DATE_,
  'REFUND' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE
  STOCK_MOVEMENT_SOURCE = 'REFUND' 
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
  ),

W_SHRINK AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'SHRINK' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE
  ((STOCK_MOVEMENT_SOURCE = 'Shrinkage' AND STOCK_MOVEMENT_CODE IS NULL) or STOCK_MOVEMENT_CODE IN ('00','0','02','2','03','3','04','4','5','05','7','07','08','8','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP'))
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
  ),

W_IT AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'IT_ADJ' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE
  ((STOCK_MOVEMENT_SOURCE = 'IPS') AND (STOCK_MOVEMENT_CODE IS NULL OR STOCK_MOVEMENT_CODE NOT IN ('00','0','02','2','03','3','04','4','5','05','6','06','7','07','08','8','11','12','17','20','21','26','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')) AND (LOWER(STOCK_MOVEMENT_REFERENCE_ID) LIKE('inc%')))
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
  ),

W_ITC AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'ITC' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE 
  --(STOCK_MOVEMENT_SOURCE = 'ERD_ITC_S' OR STOCK_MOVEMENT_SOURCE = 'ERD_ITC_R')
  STOCK_MOVEMENT_CODE IN ('12')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_RLO AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER, 
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'RLO' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE 
  STOCK_MOVEMENT_SOURCE IN ('RLO','ERD_RLO')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_PO AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  D.CALENDAR_WEEK_END_DATE AS DATE_,
  'PO' AS LINE_ITEM,
  SUM(STOCK_MOVEMENT_QUANTITY) AS LINE_VALUE
  FROM "KSFPA"."IPS_STOCK_AUDIT"."IPS_STOCK_AUDIT" P
  JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE D 
  ON D.DATE = P.DAY_DATE
  WHERE 
  (STOCK_MOVEMENT_CATEGORY = 'SRSD'
  OR STOCK_MOVEMENT_SOURCE = 'ERD_SRS')
  AND DAY_DATE > '2023-02-19' 
  and DAY_DATE <= '2023-10-15'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
)

SELECT IPS.* exclude(PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER),
sm.PRODUCT_GENERATED_IDENTIFIER,sm.LOCATION_GENERATED_IDENTIFIER,sm.PRODUCT_SOURCE_IDENTIFIER,sm.LOCATION_SOURCE_IDENTIFIER,sm.LOCATION_NAME,sm.STATE,sm.PRODUCT_DESCRIPTION,sm.DEPARTMENT_DESCRIPTION,
DENSE_RANK() OVER (ORDER BY IPS.PRODUCT_GENERATED_IDENTIFIER, IPS.LOCATION_GENERATED_IDENTIFIER) AS rnk FROM
(
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_MANIFEST

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SALES 

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_REFUND 

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SHRINK

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_IT

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_ITC

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_RLO 

  UNION

  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_PO 
)IPS

JOIN KSF_DATAANALYTICS_DEV.DS_SHRINK.SUMMARY_PAGE_FY_24 sm 
ON TO_NUMBER(CONCAT(IPS.PRODUCT_GENERATED_IDENTIFIER, '00004')) = sm.PRODUCT_GENERATED_IDENTIFIER
AND TO_NUMBER(CONCAT('1040',IPS.LOCATION_GENERATED_IDENTIFIER, '00001')) = sm.LOCATION_GENERATED_IDENTIFIER

WHERE sm.FLAG_REASON IS NOT NULL
)



-----------------------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.PAPER_SHRINK_DETAILED_FY_24 AS
(
WITH CTE_RNK AS(
SELECT distinct ips.PRODUCT_GENERATED_IDENTIFIER, ips.LOCATION_GENERATED_IDENTIFIER, 
DENSE_RANK() OVER(ORDER BY ips.PRODUCT_GENERATED_IDENTIFIER, ips.LOCATION_GENERATED_IDENTIFIER) AS RNK
FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.IPS_DETAIL_FY_24 ips 
JOIN KSF_DATAANALYTICS_DEV.DS_SHRINK.MR_DETAIL_FY_24 mr
ON ips.PRODUCT_GENERATED_IDENTIFIER = mr.PRODUCT_GENERATED_IDENTIFIER
AND ips.LOCATION_GENERATED_IDENTIFIER = mr.LOCATION_GENERATED_IDENTIFIER
),
CTE_MR AS(
SELECT * exclude(RNK) FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.MR_DETAIL_FY_24
PIVOT(SUM(LINE_VALUE) FOR LINE_ITEM IN ('MANIFEST', 'SALES', 'REFUND', 'SHRINK', 'ITC', 'RLO', 'PO'))
),
CTE_IPS AS(
SELECT * exclude(RNK) FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.IPS_DETAIL_FY_24
PIVOT(SUM(LINE_VALUE) FOR LINE_ITEM IN ('MANIFEST', 'SALES', 'REFUND', 'SHRINK', 'IT_ADJ', 'ITC', 'RLO', 'PO'))
)
SELECT A.*,
sum(IPS_MANIFEST) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_MANIFEST,
sum(MR_MANIFEST) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_MANIFEST,

sum(IPS_SALES) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_SALES,
sum(MR_SALES) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_SALES,

sum(IPS_REFUND) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_REFUND,
sum(MR_REFUND) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_REFUND,

sum(IPS_SHRINK) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_SHRINK,
sum(MR_SHRINK) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_SHRINK,

sum(IPS_IT_ADJ) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_IT_ADJ,

sum(IPS_ITC) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_ITC,
sum(MR_ITC) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_ITC,

sum(IPS_RLO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_RLO,
sum(MR_RLO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_RLO,

sum(IPS_PO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_CUMULATIVE_PO,
sum(MR_PO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_CUMULATIVE_PO,

sum(IPS_MANIFEST + IPS_SALES + IPS_REFUND + IPS_SHRINK + IPS_ITC + IPS_IT_ADJ + IPS_RLO + IPS_PO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS IPS_DERIVED_SOH,
sum(MR_MANIFEST + MR_SALES + MR_REFUND + MR_SHRINK + MR_ITC + MR_RLO + MR_PO) over (partition by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER order by DATE_ asc rows between unbounded preceding and current row) AS MR_DERIVED_SOH
FROM
(
SELECT coalesce(IPS2.PRODUCT_GENERATED_IDENTIFIER, MR2.PRODUCT_GENERATED_IDENTIFIER) AS PRODUCT_GENERATED_IDENTIFIER,
coalesce(IPS2.LOCATION_GENERATED_IDENTIFIER, MR2.LOCATION_GENERATED_IDENTIFIER) AS LOCATION_GENERATED_IDENTIFIER,
coalesce(IPS2.PRODUCT_SOURCE_IDENTIFIER, MR2.PRODUCT_SOURCE_IDENTIFIER) AS PRODUCT_SOURCE_IDENTIFIER,
coalesce(IPS2.LOCATION_SOURCE_IDENTIFIER, MR2.LOCATION_SOURCE_IDENTIFIER) AS LOCATION_SOURCE_IDENTIFIER,
coalesce(IPS2.LOCATION_NAME, MR2.LOCATION_NAME) AS LOCATION_NAME,
coalesce(IPS2.STATE, MR2.STATE) AS STATE,
coalesce(IPS2.PRODUCT_DESCRIPTION, MR2.PRODUCT_DESCRIPTION) AS PRODUCT_DESCRIPTION,
coalesce(IPS2.DEPARTMENT_DESCRIPTION, MR2.DEPARTMENT_DESCRIPTION) AS DEPARTMENT_DESCRIPTION,
coalesce(IPS2.DATE_, MR2.DATE_) AS DATE_,
ZEROIFNULL(IPS2."'MANIFEST'") AS IPS_MANIFEST,
ZEROIFNULL(MR2."'MANIFEST'") AS MR_MANIFEST,
ZEROIFNULL(IPS2."'SALES'") AS IPS_SALES,
ZEROIFNULL(MR2."'SALES'") AS MR_SALES,
ZEROIFNULL(IPS2."'REFUND'") AS IPS_REFUND,
ZEROIFNULL(MR2."'REFUND'") AS MR_REFUND,
ZEROIFNULL(IPS2."'SHRINK'") AS IPS_SHRINK,
ZEROIFNULL(MR2."'SHRINK'") AS MR_SHRINK,
ZEROIFNULL(IPS2."'IT_ADJ'") AS IPS_IT_ADJ,
ZEROIFNULL(IPS2."'ITC'") AS IPS_ITC,
ZEROIFNULL(MR2."'ITC'") AS MR_ITC,
ZEROIFNULL(IPS2."'RLO'") AS IPS_RLO,
ZEROIFNULL(MR2."'RLO'") AS MR_RLO,
ZEROIFNULL(IPS2."'PO'") AS IPS_PO,
ZEROIFNULL(MR2."'PO'") AS MR_PO,
IPS2.RNK
FROM
-------------------------------------------------------IPS--------------------------------------------------
(SELECT IPS1.* , rnk.RNK FROM
(SELECT * FROM CTE_IPS)IPS1


JOIN

( SELECT * FROM CTE_RNK) RNK
ON IPS1.PRODUCT_GENERATED_IDENTIFIER = RNK.PRODUCT_GENERATED_IDENTIFIER
AND IPS1.LOCATION_GENERATED_IDENTIFIER = RNK.LOCATION_GENERATED_IDENTIFIER)IPS2

FULL OUTER JOIN

-----------------------------------------------------MR----------------------------------------------------------
(SELECT MR1.* , rnk.RNK FROM
(SELECT * FROM CTE_MR)MR1

JOIN

(SELECT * FROM CTE_RNK) RNK
ON MR1.PRODUCT_GENERATED_IDENTIFIER = RNK.PRODUCT_GENERATED_IDENTIFIER
AND MR1.LOCATION_GENERATED_IDENTIFIER = RNK.LOCATION_GENERATED_IDENTIFIER) MR2

ON MR2.RNK = IPS2.RNK
AND MR2.DATE_ = IPS2.DATE_
ORDER BY RNK, IPS2.DATE_

)A
ORDER BY RNK, DATE_
)
