WITH
W_MANIFEST AS (
  SELECT DISTINCT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD.DESPATCH_QUANTITY) AS MANIFEST
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  LEFT JOIN KSFPA.MR2.TRANSFER_DESPATCH DES ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  WHERE
  (DES.TRANSFER_TYPE_CODE = 'DD' or DES.TRANSFER_TYPE_CODE = 'XD') AND PRD.EXPIRY_DATE = '9999-12-31'
  AND PRD.EFFECTIVE_DATE >= '2022-02-01' AND PRD.EFFECTIVE_DATE <= '2023-05-29'
  AND REC.EXPIRY_DATE = '9999-12-31' and substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY
  REC.LOCATION_GENERATED_IDENTIFIER,
  PRD.PRODUCT_GENERATED_IDENTIFIER
),

W_SALES AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  SUM(WEEKLY_NET_SALES_QUANTITY) * -1.00 AS SALES 
  FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES
  WHERE
  WEEK_END_DATE >= '2022-02-01' AND WEEK_END_DATE <= '2023-05-29'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER
),

W_SHRINK AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  SUM(STOCK_ADJUSTMENT_QUANTITY) AS SHRINK
  FROM KSFPA.MR2.SS_STOCK_ADJUSTMENT
  WHERE
  STOCK_ADJUSTMENT_REASON_CODE IN ('00','02','03','04','05','07','08','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')
  AND PERIOD_END_DATE >= '2022-02-01' AND PERIOD_END_DATE <= '2023-05-29'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER
),

W_PO AS (
  SELECT DISTINCT
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER,
  SUM(LOC_PROD.Receipt_QUANTITY) AS PO
  FROM KSFPA.MR2.LOCATION_RECEIPT_PRODUCT LOC_PROD
  JOIN KSFPA.MR2.LOCATION_RECEIPT LOC
  ON LOC.RECEIPT_GENERATED_IDENTIFIER = LOC_PROD.RECEIPT_GENERATED_IDENTIFIER
  WHERE
  LOC_PROD.EXPIRY_DATE = '9999-12-31' AND  LOC_PROD.EFFECTIVE_DATE >= '2022-02-01' AND LOC_PROD.EFFECTIVE_DATE <= '2023-05-29'
  AND LOC.EXPIRY_DATE = '9999-12-31' AND substring(LOC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER
),

W_ITC AS (
  SELECT 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, 
  DES_ITC.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD_ITC.DESPATCH_QUANTITY) * -1 AS ITC
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_ITC
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_ITC
  ON DES_ITC.TRANSFER_GENERATED_IDENTIFIER = PRD_ITC.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_ITC.TRANSFER_TYPE_CODE = 'SS' AND PRD_ITC.EXPIRY_DATE = '9999-12-31' AND DES_ITC.EXPIRY_DATE = '9999-12-31' 
  AND DES_ITC.EFFECTIVE_DATE >= '2022-02-01' AND DES_ITC.EFFECTIVE_DATE <= '2023-05-29'
  GROUP BY 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, DES_ITC.LOCATION_GENERATED_IDENTIFIER
),

W_RLO AS (
  SELECT 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, 
  DES_RLO.LOCATION_GENERATED_IDENTIFIER,
  SUM(PRD_RLO.DESPATCH_QUANTITY) * -1 AS RLO
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_RLO
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_RLO
  ON DES_RLO.TRANSFER_GENERATED_IDENTIFIER = PRD_RLO.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_RLO.TRANSFER_TYPE_CODE = 'SR' AND PRD_RLO.EXPIRY_DATE = '9999-12-31' AND DES_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.EFFECTIVE_DATE >= '2022-02-01' AND DES_RLO.EFFECTIVE_DATE <= '2023-05-29'
  GROUP BY 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, DES_RLO.LOCATION_GENERATED_IDENTIFIER
),

W_SEASONAL AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER
  FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES
  GROUP by PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER
  HAVING MIN(WEEK_END_DATE) >= '2022-03-28' AND MAX(WEEK_END_DATE) <= '2023-04-02'
),

W_KEY_CODE AS (
  SELECT 
  PRODUCT_GENERATED_IDENTIFIER, 
  DEPARTMENT_DESCRIPTION, 
  SEASON_CODE
  FROM KSFPA.MR2C.KEYCODE
  WHERE DEPARTMENT_DESCRIPTION in ('XMAS TRIM & WRAP') OR (lower(product_description) like ('%easter%') or lower(product_description) like ('%eastr%') or DEPARTMENT_DESCRIPTION in ('EASTER'))
)

SELECT DISTINCT PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER 
FROM
(
SELECT MR.*, (MR_MANIFEST + MR_SALES + MR_SHRINK + MR_ITC + MR_RLO + MR_PO) AS MR_DERIVED_SOH FROM
(
  SELECT MAN.PRODUCT_GENERATED_IDENTIFIER, 
  MAN.LOCATION_GENERATED_IDENTIFIER, 
  ZEROIFNULL(MAN.MANIFEST) AS MR_MANIFEST, 
  ZEROIFNULL(SAL.SALES) AS MR_SALES, 
  ZEROIFNULL(SHR.SHRINK) AS MR_SHRINK, 
  ZEROIFNULL(PO.PO) AS MR_PO, 
  ZEROIFNULL(ITC.ITC) AS MR_ITC, 
  ZEROIFNULL(RLO.RLO) AS MR_RLO
  FROM W_MANIFEST MAN
  
  FULL OUTER JOIN W_SALES SAL
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SAL.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SAL.LOCATION_GENERATED_IDENTIFIER
  
  FULL OUTER JOIN W_SHRINK SHR
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = SHR.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = SHR.LOCATION_GENERATED_IDENTIFIER
  
  FULL OUTER JOIN W_PO PO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = PO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = PO.LOCATION_GENERATED_IDENTIFIER
  
  FULL OUTER JOIN W_ITC ITC
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = ITC.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = ITC.LOCATION_GENERATED_IDENTIFIER
  
  FULL OUTER JOIN W_RLO RLO
  ON MAN.PRODUCT_GENERATED_IDENTIFIER = RLO.PRODUCT_GENERATED_IDENTIFIER
  AND MAN.LOCATION_GENERATED_IDENTIFIER = RLO.LOCATION_GENERATED_IDENTIFIER
) MR

JOIN W_SEASONAL SEA 
ON MR.PRODUCT_GENERATED_IDENTIFIER = SEA.PRODUCT_GENERATED_IDENTIFIER
AND MR.LOCATION_GENERATED_IDENTIFIER = SEA.LOCATION_GENERATED_IDENTIFIER

JOIN W_KEY_CODE KEY_CODE
ON MR.PRODUCT_GENERATED_IDENTIFIER = KEY_CODE.PRODUCT_GENERATED_IDENTIFIER 
  )