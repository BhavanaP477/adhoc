CREATE TABLE KSFDA.SHRINK_TACTICAL.MR_DETAIL6 AS
(
WITH
W_MANIFEST AS (
  SELECT DISTINCT
  PRD.PRODUCT_GENERATED_IDENTIFIER,
  REC.LOCATION_GENERATED_IDENTIFIER,
  DATEADD (DAY,
  7 - DAYOFWEEK (PRD.EFFECTIVE_DATE),
  PRD.EFFECTIVE_DATE
  ) AS DATE_,
  'MANIFEST' AS LINE_ITEM,
  SUM(PRD.DESPATCH_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_PRODUCT PRD 
  JOIN KSFPA.MR2.TRANSFER_RECEIPT REC ON REC.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  LEFT JOIN KSFPA.MR2.TRANSFER_DESPATCH DES ON DES.TRANSFER_GENERATED_IDENTIFIER = PRD.TRANSFER_GENERATED_IDENTIFIER
  WHERE
  (DES.TRANSFER_TYPE_CODE = 'DD' or DES.TRANSFER_TYPE_CODE = 'XD') AND PRD.EXPIRY_DATE = '9999-12-31'
  AND PRD.EFFECTIVE_DATE > '2022-02-20' 
  AND PRD.EFFECTIVE_DATE <= '2023-02-26'
  AND REC.EXPIRY_DATE = '9999-12-31' and substring(REC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY REC.LOCATION_GENERATED_IDENTIFIER, PRD.PRODUCT_GENERATED_IDENTIFIER, DATE_
),

W_SALES AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  WEEK_END_DATE AS DATE_,
  'SALES' AS LINE_ITEM,
  SUM(WEEKLY_NET_SALES_QUANTITY) * -1.00 AS LINE_VALUE 
  FROM KSFPA.MR2C.WEEKLY_ADJUSTED_SALES
  WHERE
  WEEK_END_DATE > '2022-02-20' AND 
  WEEK_END_DATE <= '2023-02-26'
  GROUP BY
  PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_SHRINK AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  DATEADD (DAY,
  7 - DAYOFWEEK (PERIOD_END_DATE),
  PERIOD_END_DATE
  ) AS DATE_,
  'SHRINK' AS LINE_ITEM,
  SUM(STOCK_ADJUSTMENT_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.SS_STOCK_ADJUSTMENT
  WHERE
  STOCK_ADJUSTMENT_REASON_CODE IN ('00','02','03','04','05','07','08','11','17','20','21','29','34','35','36','37','50','51','53','54','55','56','57','58','60','61','62','63','64','65','66','67','68','69','70','NS','NP')
  AND PERIOD_END_DATE > '2022-02-20' 
  AND PERIOD_END_DATE <= '2023-02-26'
  GROUP BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_PO AS (
  SELECT DISTINCT
  LOC_PROD.PRODUCT_GENERATED_IDENTIFIER,
  LOC.LOCATION_GENERATED_IDENTIFIER,
  DATEADD (DAY,
  7 - DAYOFWEEK (LOC_PROD.EFFECTIVE_DATE),
  LOC_PROD.EFFECTIVE_DATE
  ) AS DATE_,
  'PO' AS LINE_ITEM,
  SUM(LOC_PROD.Receipt_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2.LOCATION_RECEIPT_PRODUCT LOC_PROD
  JOIN KSFPA.MR2.LOCATION_RECEIPT LOC
  ON LOC.RECEIPT_GENERATED_IDENTIFIER = LOC_PROD.RECEIPT_GENERATED_IDENTIFIER
  WHERE
  LOC_PROD.EXPIRY_DATE = '9999-12-31' AND  LOC_PROD.EFFECTIVE_DATE > '2022-02-20' AND 
  LOC_PROD.EFFECTIVE_DATE <= '2023-02-26'
  AND LOC.EXPIRY_DATE = '9999-12-31' AND substring(LOC.LOCATION_GENERATED_IDENTIFIER, 5, 4) < 9000 
  GROUP BY LOC_PROD.PRODUCT_GENERATED_IDENTIFIER, LOC.LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_ITC AS (
  SELECT 
  PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, 
  DES_ITC.LOCATION_GENERATED_IDENTIFIER,
  DATEADD (DAY,
  7 - DAYOFWEEK (DES_ITC.EFFECTIVE_DATE),
  DES_ITC.EFFECTIVE_DATE
  ) AS DATE_,
  'ITC' AS LINE_ITEM,
  SUM(PRD_ITC.DESPATCH_QUANTITY) * -1 AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_ITC
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_ITC
  ON DES_ITC.TRANSFER_GENERATED_IDENTIFIER = PRD_ITC.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_ITC.TRANSFER_TYPE_CODE = 'SS' AND PRD_ITC.EXPIRY_DATE = '9999-12-31' AND DES_ITC.EXPIRY_DATE = '9999-12-31' 
  AND DES_ITC.EFFECTIVE_DATE > '2022-02-20' 
  AND DES_ITC.EFFECTIVE_DATE <= '2023-02-26'
  GROUP BY PRD_ITC.PRODUCT_GENERATED_IDENTIFIER, DES_ITC.LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_RLO AS (
  SELECT 
  PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, 
  DES_RLO.LOCATION_GENERATED_IDENTIFIER,
  DATEADD (DAY,
  7 - DAYOFWEEK (DES_RLO.EFFECTIVE_DATE),
  DES_RLO.EFFECTIVE_DATE
  ) AS DATE_,
  'RLO' AS LINE_ITEM,
  SUM(PRD_RLO.DESPATCH_QUANTITY) * -1 AS LINE_VALUE
  FROM KSFPA.MR2.TRANSFER_DESPATCH DES_RLO
  LEFT JOIN KSFPA.MR2.TRANSFER_PRODUCT PRD_RLO
  ON DES_RLO.TRANSFER_GENERATED_IDENTIFIER = PRD_RLO.TRANSFER_GENERATED_IDENTIFIER
  WHERE 
  DES_RLO.TRANSFER_TYPE_CODE = 'SR' AND PRD_RLO.EXPIRY_DATE = '9999-12-31' AND DES_RLO.EXPIRY_DATE = '9999-12-31' 
  AND DES_RLO.EFFECTIVE_DATE > '2022-02-20' 
  AND DES_RLO.EFFECTIVE_DATE <= '2023-02-26'
  GROUP BY PRD_RLO.PRODUCT_GENERATED_IDENTIFIER, DES_RLO.LOCATION_GENERATED_IDENTIFIER, DATE_
),

W_SOH AS (
  SELECT DISTINCT
  PRODUCT_GENERATED_IDENTIFIER,
  LOCATION_GENERATED_IDENTIFIER,
  WEEK_END_DATE AS DATE_,
  'SOH' AS LINE_ITEM,
  SUM(STOCK_ON_HAND_QUANTITY) AS LINE_VALUE
  FROM KSFPA.MR2C.WEEKLY_LOCATION_STOCK
  WHERE
  WEEK_END_DATE > '2022-02-20' AND 
  WEEK_END_DATE <= '2023-02-26'
  GROUP BY PRODUCT_GENERATED_IDENTIFIER, LOCATION_GENERATED_IDENTIFIER, WEEK_END_DATE
)

SELECT MR.*, sm.PRODUCT_SOURCE_IDENTIFIER,
sm.LOCATION_SOURCE_IDENTIFIER,sm.LOCATION_NAME,sm.STATE,sm.PRODUCT_DESCRIPTION,sm.DEPARTMENT_DESCRIPTION,
DENSE_RANK() OVER (ORDER BY MR.PRODUCT_GENERATED_IDENTIFIER, MR.LOCATION_GENERATED_IDENTIFIER) AS rnk FROM
(
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_MANIFEST
  
  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SALES 

  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SHRINK
   
  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_ITC
  
  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_RLO 
   
  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_PO
  
  UNION
 
  SELECT PRODUCT_GENERATED_IDENTIFIER, 
  LOCATION_GENERATED_IDENTIFIER, 
  DATE_,
  LINE_ITEM,
  LINE_VALUE
  FROM W_SOH
)MR
  
JOIN KSFDA.SHRINK_TACTICAL.SUMMARY_PAGE_FY24 sm 
ON MR.PRODUCT_GENERATED_IDENTIFIER = sm.PRODUCT_GENERATED_IDENTIFIER
AND MR.LOCATION_GENERATED_IDENTIFIER = sm.LOCATION_GENERATED_IDENTIFIER
  
WHERE sm.FLAG_REASON IS NOT NULL
)
