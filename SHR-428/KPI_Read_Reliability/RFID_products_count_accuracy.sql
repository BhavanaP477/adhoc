DROP TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT;
CREATE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT AS
SELECT LOC.LOCATION_CODE, PROD.PRODUCT_KEYCODE, A.EPC_NUMBER,
A.CALENDAR_MONTH_NAME, A.CALENDAR_MONTH_NUMBER, A.CALENDAR_YEAR,
A.FIRST_READ_DATE, A.LAST_READ_DATE, A.TOTAL_READS
--(DT_2.DATE - DT_1.DATE + 1) AS EXPECTED_READS,
--ROUND(TOTAL_READS/EXPECTED_READS,2) AS TORY_PERCENT 
FROM
(SELECT A.FK_LOCATION_ID, A.FK_PRODUCT_ID, A.EPC_NUMBER,
DT.CALENDAR_MONTH_NAME, DT.CALENDAR_MONTH_NUMBER, DT.CALENDAR_YEAR,
MIN(DT.DATE) AS FIRST_READ_DATE,
MAX(DT.DATE) AS LAST_READ_DATE,
COUNT(DISTINCT A.FK_DATE_ID) AS TOTAL_READS
--MAX(FK_DATE_ID) - MIN(FK_DATE_ID) AS EXPECTED_READS
FROM 
(SELECT FK_LOCATION_ID, FK_PRODUCT_ID, EPC_NUMBER, FK_DATE_ID
 FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.DOSA.FACT_EPC_NEW_MODEL
 WHERE FK_DATE_ID >= 20230201
 AND RUN_QUALITY >= 0.9
 AND RUN_ACCEPTED = 'TRUE'
 AND EPC_AREA LIKE ('%FOH%')
 --AND EPC_AREA IN (SELECT * FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.DISTINCT_EPC_AREA)
) A
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE DT
ON A.FK_DATE_ID = DT.SK_DATE_ID
--WHERE FK_LOCATION_ID = 174
--AND FK_PRODUCT_ID = 514719984
GROUP BY 1,2,3,4,5,6) A
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_LOCATION LOC
ON A.FK_LOCATION_ID = LOC.SK_LOCATION_ID
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT PROD
ON A.FK_PRODUCT_ID = PROD.SK_PRODUCT_ID;


DROP TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_STR_TORY_RUN_DATE;
CREATE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_STR_TORY_RUN_DATE AS
SELECT LOC.LOCATION_CODE, DT.DATE, A.RUN_QUALITY, A.RUN_ACCEPTED
FROM
(SELECT FK_LOCATION_ID, FK_DATE_ID,
MAX(RUN_QUALITY) AS RUN_QUALITY,
MAX(RUN_ACCEPTED) AS RUN_ACCEPTED
FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.DOSA.FACT_EPC_NEW_MODEL
WHERE FK_DATE_ID >= 20230201
GROUP BY 1,2) A
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE DT
ON A.FK_DATE_ID = DT.SK_DATE_ID
JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_LOCATION LOC
ON A.FK_LOCATION_ID = LOC.SK_LOCATION_ID
WHERE A.RUN_QUALITY >= 0.9
AND A.RUN_ACCEPTED = 'TRUE';


DROP TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT_ACC;
CREATE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT_ACC AS
SELECT A.LOCATION_CODE, A.PRODUCT_KEYCODE, A.EPC_NUMBER,
A.CALENDAR_MONTH_NAME, A.CALENDAR_MONTH_NUMBER, A.CALENDAR_YEAR,
A.FIRST_READ_DATE, A.LAST_READ_DATE, A.TOTAL_READS,
COUNT(DISTINCT B.DATE) AS EXPECTED_READS,
ROUND(A.TOTAL_READS/EXPECTED_READS,2) AS TORY_PERCENT
FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT A
INNER JOIN KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_STR_TORY_RUN_DATE B
ON A.LOCATION_CODE = B.LOCATION_CODE
AND B.DATE >= A.FIRST_READ_DATE
AND B.DATE <= A.LAST_READ_DATE
GROUP BY 1,2,3,4,5,6,7,8,9;



DROP TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_READ_RELIABILITY;
CREATE TABLE KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_READ_RELIABILITY AS
SELECT * FROM
(SELECT LOCATION_CODE, PRODUCT_KEYCODE, 'DAYS DETECTED' AS LINE_ITEM,
'KPI - RFID READ RELIABILITY' AS LINE_ITEM_2, 
--CONCAT(SUBSTRING(CALENDAR_MONTH_NAME,1,3),'-',SUBSTRING(CALENDAR_YEAR,3,2)) AS PERIOD_END_DATE,
DT.MONTH_END_DATE AS PERIOD_END_DATE,
SUM(TOTAL_READS) AS QTY, NULL AS AMT
FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT_ACC A
JOIN 
(SELECT CALENDAR_MONTH_NUMBER, CALENDAR_YEAR,
MAX(DATE) AS MONTH_END_DATE
FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE
WHERE DATE >= '2023-02-01'
GROUP BY 1,2) DT
ON A.CALENDAR_MONTH_NUMBER = DT.CALENDAR_MONTH_NUMBER
AND A.CALENDAR_YEAR = DT.CALENDAR_YEAR
GROUP BY 1,2,3,4,5
UNION ALL
SELECT LOCATION_CODE, PRODUCT_KEYCODE, 'MAX DAYS DETECTED' AS LINE_ITEM,
'KPI - RFID READ RELIABILITY' AS LINE_ITEM_2, 
--CONCAT(SUBSTRING(CALENDAR_MONTH_NAME,1,3),'-',SUBSTRING(CALENDAR_YEAR,3,2)) AS PERIOD_END_DATE,
DT.MONTH_END_DATE AS PERIOD_END_DATE,
SUM(EXPECTED_READS) AS QTY, NULL AS AMT
FROM KSF_DATAANALYTICS_DEV.DS_SHRINK.RFID_PROD_CNT_ACC A
JOIN 
(SELECT CALENDAR_MONTH_NUMBER, CALENDAR_YEAR,
MAX(DATE) AS MONTH_END_DATE
FROM KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE
WHERE DATE >= '2023-02-01'
GROUP BY 1,2) DT
ON A.CALENDAR_MONTH_NUMBER = DT.CALENDAR_MONTH_NUMBER
AND A.CALENDAR_YEAR = DT.CALENDAR_YEAR
GROUP BY 1,2,3,4,5) A;
